name: CICD pipeline with DockerHub and EC2
run-name: CICD pipeline with DockerHub and EC2
on:
  push:
    branches:
      - main

env:
  SSH_USER: ${{secrets.SSH_USER}}
  SSH_HOST: ${{secrets.SSH_HOST}}
  SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
  DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
jobs:
  docker:
    name: Build and Push Docker Image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{env.DOCKER_USERNAME}} 
          password: ${{env.DOCKER_PASSWORD}}
      - name: Build & Push the Docker Image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: pasindumw/docker-react:latest
  ec2:
    needs: docker
    name: Deploy Docker Container to EC2
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/github-actions.pem
          chmod 600 ~/.ssh/github-actions.pem
      - name: Install and Start Docker on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/github-actions.pem $SSH_USER@$SSH_HOST "
            if ! command -v docker &> /dev/null; then
              sudo apt-get update &&
              sudo apt-get install -y docker.io &&
              sudo systemctl start docker &&
              sudo systemctl enable docker
            else
              echo 'Docker is already installed.'
            fi
          " || exit 1
      - name: Login to Docker Hub on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/github-actions.pem $SSH_USER@$SSH_HOST "
            sudo docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          " || exit 1
      - name: Pull and Run Docker Image on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/github-actions.pem $SSH_USER@$SSH_HOST "
            sudo docker rmi pasindumw/docker-react:latest
            sudo docker stop docker-react || true &&
            sudo docker rm docker-react || true &&
            sudo docker pull pasindumw/docker-react:latest &&
            sudo docker run --name docker-react  -d -p 80:80 pasindumw/docker-react:latest
          " || exit 1