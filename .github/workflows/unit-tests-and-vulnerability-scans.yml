name: Unit Tests and Vulnerability Scans
run-name: Unit Tests and Vulnerability Scans

# Permissions: restrict what this workflow can do
permissions:
  security-events: write  # allow uploading SARIF results to Security tab
  actions: read           # read-only for GitHub Actions metadata
  contents: read          # read-only for repo contents

# Triggers: run on pushes to main (uncomment PR block to test on PRs too) 
on:
  push:
    branches:
      - main
  # pull_request:
  #   types:
  #     - opened
  #     - reopened
  #   branches:
  #     - main
  # workflow_dispatch:

jobs:
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Get code                # 1. Checkout your repo
        uses: actions/checkout@v3

      - name: Install Node.js         # 2. Setup Node.js toolchain
        uses: actions/setup-node@v3
        with:
          node-version: '20'  

      - name: Install dependencies    # 3. Install NPM packages
        run: npm install

      - name: Run tests               # 4. Run test suite
        run: npm test

  fsScan:
    needs: test      # only run after tests pass
    name: File System Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout       # fresh checkout for scanning
        uses: actions/checkout@v4
      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: "fs"           # filesystem scan of source code
          ignore-unfixed: true      # skip findings without fixes
          format: "sarif"           # SARIF format for GitHub
          output: "trivy-fs-scan-results.sarif"
          severity: "CRITICAL"      # only report CRITICAL issues
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-fs-scan-results.sarif" 
          
  containerScan:
    needs: fsScan          # only run after fsScan completes
    name: Container Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code          # get code for Docker build
        uses: actions/checkout@v4
      - name: Set up Docker Buildx      # enable advanced build features
        uses: docker/setup-buildx-action@v3
      - name: Build Docker image            # build local image for scanning
        run: docker build -t my-app-image .
      - name: Run Trivy container vulnerability scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
            image-ref: "my-app-image"    # scan this image
            scan-type: "image"
            format: "sarif"
            output: "trivy-image-scan-results.sarif"
            severity: "CRITICAL"
      - name: Upload Trivy container scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
            sarif_file: "trivy-image-scan-results.sarif"
        